---
- name: Copy the initialization script to tmp
  template:
    src: replicaset_init.j2
    dest: /tmp/replicaset_init.js

- name: Execute the initialization script and add all replicants
  shell: mongo localhost:{{ item.port }}/admin /tmp/replicaset_init.js
  ignore_errors: yes
  with_items: "{{ mongo_databases }}"

- name: play that sets a group to loop over
  vars:
    mongo_replicas: "{{ groups['mongo_secondaries_servers'] }}"
  template:
    src: replicaset_add_node.j2
    dest: /tmp/replicaset_add_node.js

- name: Execute the initialization script and add all replicants
  shell: mongo --host "{{ item.name }}-rs/localhost:{{ item.port }}" -u "{{ mongo_admin_user }}" -p "{{ mongo_admin_pass }}" --authenticationDatabase "admin" < /tmp/replicaset_add_node.js
  with_items: "{{ mongo_databases }}"

- name: create file mongod.service
  copy:
    src: mongod.service
    dest: /lib/systemd/system/mongod.service
    owner: root
    group: root
    mode: 0644

- name: systemctl daemon reload
  shell: systemctl daemon-reload
  become: yes

- name: Stop Instances
  shell: "mongod -f ~/mongodb/conf.d/mongod.{{ item.name }}.conf --shutdown"
  args:
      executable: /bin/bash
  with_items: "{{ mongo_databases }}"
  register: command_result
  become: no
  ignore_errors: yes

- name: mongodb service restart
  shell: systemctl restart mongod
  become: yes

  # ignore_errors: no



